<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>NLP on Vishal Lakha</title>
    <link>https://vishallakha.github.io/tags/nlp/</link>
    <description>Recent content in NLP on Vishal Lakha</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 03 Mar 2022 23:29:21 +0530</lastBuildDate><atom:link href="https://vishallakha.github.io/tags/nlp/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Siamese Neural Network for Text Similarity</title>
      <link>https://vishallakha.github.io/blog/siamese_text_similarity/</link>
      <pubDate>Thu, 03 Mar 2022 23:29:21 +0530</pubDate>
      
      <guid>https://vishallakha.github.io/blog/siamese_text_similarity/</guid>
      <description>Description I have implemented a Siamese Neural Network for text similarity. It takes two sentences as input and predicts the similarity between them. Here one input comes from the user and the other input is a entire dataset of documents in the data lake. It implements BERT embeddings for both the sentences, takes the average pooling and gives the output as 1024 dimensional vector embeddings. These embeddings are stored in Mongo DB so that they can be easily used again and again without recalculations.</description>
    </item>
    
    <item>
      <title>Custom Named Entity Recognition Model with Deep Learning</title>
      <link>https://vishallakha.github.io/blog/ner_model/</link>
      <pubDate>Tue, 04 Jan 2022 23:29:21 +0530</pubDate>
      
      <guid>https://vishallakha.github.io/blog/ner_model/</guid>
      <description>Objective Build a NLP model which can extract out the important keywords (related to a particular domain) from documents.
Â Description In this project i have trained a custom Named Entity Recognition Model, which takes input of strings (max size 40) and predicts the Named Entities from the text. It used ELMo (Embeddings from Language Models) , bi directional LSTM and a time distributed dense layer.
Technology Stack Python, Keras, Tensorflow, LSTM</description>
    </item>
    
  </channel>
</rss>
